name: cooljeanius/MacPorts-fork
on:
  push:
    branches:
    - "**/*"
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.5
#     # 'Transformers::TravisCI::Scripts::Dependencies' dependencies are currently unsupported
#     # 'compiler' was not transformed because there is no suitable equivalent in GitHub Actions
    - run: sudo apt-get update
    - run: sudo apt-get install autotools-dev debhelper gobjc gobjc++ gobjc-multilib gobjc++-multilib gobjc-9 libgnustep-base-dev gnustep-core-devel sqlite sqlite3 libsqlite3-dev openssl curl libcurl4-gnutls-dev tcl8.6 tcl tcl-dev tcl-doc tclthread tclreadline mtree-netbsd binutils libc6-dev perl doxygen swig cvs ed pax rlwrap gobjc-9-multilib bmake pmake bzr tcldoc xattr libc-devtools clang-14 clang gnustep gnustep-devel gnustep-examples libasprintf-dev libgettextpo-dev steptalk libdbuskit-dev libgorm-dev libpantomime-dev libperformance-dev libpopplerkit-dev libpreferencepanes-dev libsqlclient-dev libsteptalk-dev libnetclasses-dev libaddresses-dev libaddressview-dev librsskit-dev gnustep-dl2 libidn11-dev libkrb5-dev libldap2-dev librtmp-dev libssh2-1-dev
    - run: (if test -d /usr/lib/freebsd; then export PATH=${PATH}:/usr/lib/freebsd; elif test -e /usr/lib/freebsd; then stat /usr/lib/freebsd; else sync && sleep 1; fi) && env | uniq | sort | uniq
    - run: "(./configure --with-objc-runtime=GNU --with-objc-foundation=GNU --enable-maintainer-mode --enable-symbols --enable-readline --without-startupitems || ./configure --disable-maintainer-mode --disable-symbols --disable-readline --without-startupitems || (test -e configure-chrooted.sh && sh ./configure-chrooted.sh) || (test -e configure.sh && sh ./configure.sh))"
      env:
        CC: ${{ matrix.compiler }}
    - run: if test -e Makefile; then make; elif test -e Makefile_orig; then make -f Makefile_orig; elif test -e Doxyfile; then doxygen; else echo "nothing to make!" >&2 && exit 1; fi
      env:
        CC: ${{ matrix.compiler }}
    - run: pwd && sync && (make test || make check) && sync && sleep 1
      if: "${{ success() }}"
    - run: if test -r config.log; then cat config.log && sync && wc -l config.log; elif test -e config.log; then stat config.log; else ls -AR; fi; sync; sleep 3
      if: "${{ failure() }}"
    strategy:
      fail-fast: false
      matrix:
        compiler:
        - clang
        - gcc
